apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'eclipse'

def pluginName = "gaelyk-bootstrap-resources"
version = "2.0.4-SNAPSHOT"
group = 'org.gaelyk'

repositories {
    mavenLocal()
	mavenCentral()
	mavenRepo url: 'https://oss.sonatype.org/content/repositories/snapshots'
}

dependencies {
	def gaeVersion = '1.6.6'
	groovy 'org.codehaus.groovy:groovy-all:1.8.6'
	compile	'org.gaelyk:gaelyk-resources:0.1.1'
	testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'
	testCompile	"com.google.appengine:appengine-api-stubs:$gaeVersion"
	testCompile "com.google.appengine:appengine-testing:$gaeVersion"
}


jar {
	baseName pluginName
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	baseName = pluginName
	from "${project.docsDir}/javadoc"
	classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
	baseName = pluginName
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

if(hasProperty('sonatypeUsername') && hasProperty('sonatypePassword')){

	signing {
		sign configurations.archives
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

				def auth = {
				  authentication(userName: sonatypeUsername, password: sonatypePassword)
				}

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/", auth)
				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots", auth)


				pom.project {
				   name 'Gaelyk Bootstrap Resources Plugin'
				   packaging 'jar'
				   description 'Gaelyk Bootstrap Plugin provides Twitter Bootstrap resources for Gaelyk applications.'
				   url 'https://github.com/musketyr/gaelyk-bootstrap-resources-plugin'

				   scm {
					   url 'scm:git@github.com:musketyr/gaelyk-bootstrap-resources-plugin.git'
					   connection 'scm:git@github.com:musketyr/gaelyk-bootstrap-resources-plugin.git'
					   developerConnection 'scm:git@github.com:musketyr/gaelyk-bootstrap-resources-plugin.git'
				   }

				   licenses {
					   license {
						   name 'The Apache Software License, Version 2.0'
						   url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						   distribution 'repo'
					   }
				   }

				   developers {
					   developer {
						   id 'vladimirorany'
						   name 'Vladimir Orany'
					   }
				   }
			   }

			   //mess with the generated pom to set the 'packaging' tag
			   pom.withXml { XmlProvider xmlProvider ->
				   def xml = xmlProvider.asString()
				   def pomXml = new XmlParser().parse(new ByteArrayInputStream(xml.toString().bytes))

				   pomXml.version[0] + { packaging('jar') }

				   def newXml = new StringWriter()
				   def printer = new XmlNodePrinter(new PrintWriter(newXml))
				   printer.preserveWhitespace = true
				   printer.print(pomXml)
				   xml.setLength(0)
				   xml.append(newXml.toString())
			   }
			}
		}
	}

}

